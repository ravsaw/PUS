@model PUS.ViewModels.TransactionDetailsViewModel
@using Microsoft.AspNetCore.Identity
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@inject UserManager<Profile> UserManager

@functions {
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}
<script>
    function acceptordeny(status) {

        if (@((int)@Model.Status) != 0 && (status != 1 || status != 2)) {
            return false;
        }

        var formData = new FormData();
        formData.set("transactionID", @Model.TransactionId);
        formData.set("status", status);


        $.ajax({
            type: "POST",
            url: "/Transactions/ChangeStatus",
            cache: false,
            processData: false,
            contentType: false,
            data: formData,
            headers:
            {
                "RequestVerificationToken": '@GetAntiXsrfRequestToken()'
            },
            success: function (response) {
                $('#accept').hide();
                $('#deny').hide();
                console.log("sukces");
                console.log(response);
            },
            failure: function (response) {
                console.log("fail");
                console.log(response);
            },
            error: function (response) {
                console.log("error");
                console.log(response);
            }
        });
    }
</script>

<div class="modal-header">
    <h5 class="modal-title"><i class="fa-solid fa-right-left"></i> Zamówienie</h5>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>
<div class="modal-body">
    <div class="container">
        <form id="transaction" method="post" action="Transactions/Create">
            <div class="row">
                <div class="col-sm-4">
                    <img class="img-fluid" src=@($"img/services/{Model.ServiceId}.jpeg") onerror="this.src='img/placeholder.png';">
                </div>
                <div class="col-sm-8">

                    <div class="mb-2">
                        <b>Usługa:</b> @Model.ServiceTitle
                    </div>

                    <div class="mb-2">
                        <b>Oferta od:</b> @Model.ClientName
                    </div>

                    <div class="mb-2">
                        <b>Propozycja wymiany, oferent:</b>
                        <br />
                        @Model.OfferTo
                    </div>

                    <div class="mb-2">
                        <b>Ofertobiorca: </b>
                        <br />
                        @Model.OfferBack
                    </div>

                    <div class="mb-2">
                        <b>Data wymiany:</b>
                        <br />
                        @Model.ExchangeDate
                    </div>

                    <div class="mb-2">
                        <b>Wartość EQI:</b>
                        <br />
                        @Model.EQI
                    </div>

                    <div class="mb-2">
                        <b>Uwagi:</b>
                        <br />
                        @Model.Remarks
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
<div class="modal-footer">
    @{
        var user = await UserManager.GetUserAsync(User);
        var userId = user?.Id;
        if (Model.Status == Transaction.Status.Pending && @Model.ownerId == userId)
        {
            <button type="button" id="accept" class="btn btn-outline-success" onclick="acceptordeny(1)">
                <i class="fa-solid fa-check"></i>
            </button>
            <button type="button" id="deny" class="btn btn-outline-danger" onclick="acceptordeny(2)">
                <i class="fa-solid fa-x"></i>
            </button>
        }
    }
    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
</div>
